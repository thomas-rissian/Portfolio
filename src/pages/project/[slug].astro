---
import Layout from '../../layouts/Layout.astro';
import ProjectNavigation from '../../components/project/ProjectNavigation.astro';
import Carousel from '../../components/project/Carousel.astro';
import { stringify } from 'gray-matter';
interface Image {
  src: string;
  alt: string;
  caption?: string;
}

interface Frontmatter {
  slug: string;
  title: string;
  image?: string; // Image principale (string)
  dates?: string;
  description?: string;
  etapes?: string[]; // Ajouté
  technologies?: string[];
  competences?: string[]; // Ajouté
  illustration?: string; // Ajouté
  conclusion?: string; // Ajouté
  github?: string;
  images?: {
    src: string;
    alt: string;
    caption?: string;
  }[];
}

export async function getStaticPaths() {
  const projects = await Astro.glob('../../content/project/*.md');
  return projects.map((project) => ({
    params: { slug: project.frontmatter.slug }
  }));
}

const { slug } = Astro.params;
const projects = await Astro.glob('../../content/project/*.md');
const project = projects.find(p => p.frontmatter.slug === slug);

if (!project) {
  throw new Error('Projet introuvable');
}

const {
  title,
  image, // Image principale (string)
  dates,
  description,
  technologies,
  github,
  numerique,
  images // Galerie (array d'objets)
} = project.frontmatter;

const currentTechs = project.frontmatter.technologies || [];

// Filtrer les projets similaires par technologies communes, exclure le projet courant
let similarProjects = projects.filter(p => {
  if (p.frontmatter.slug === slug) return false;
  const pTechs = p.frontmatter.technologies || [];
  return pTechs.some(tech => currentTechs.includes(tech));
});

// Supprimer les doublons (par slug)
const uniqueSlugs = new Set();
similarProjects = similarProjects.filter(p => {
  if (uniqueSlugs.has(p.frontmatter.slug)) return false;
  uniqueSlugs.add(p.frontmatter.slug);
  return true;
});

// Sélectionner les projets précédent et suivant parmi les similaires
const prevProject = similarProjects[0] || null;
const nextProject = similarProjects[1] || null;



// Add this to the top level
const currentImage = 0; // Default value for initial render

function withBase(path: string, base = import.meta.env.BASE_URL): string {
  return `${base.replace(/\/$/, '')}/${path.replace(/^\//, '')}`;
}
---

<Layout pageTitle={title}>
<ProjectNavigation prevProject={prevProject?.frontmatter} nextProject={nextProject?.frontmatter} />

  <article class="project-detail">
    <div class="project-header">
      <div class="project-header-img">
        {image && <img src={withBase(image)} alt={title} class="main-image-modern" />}
      </div>
      <div class="project-header-content">
        <div class="project-meta">
          {dates && <span class="project-date">{dates}</span>}
          {github && (
            <a href={github} target="_blank" rel="noopener" class="github-link-modern">
              <svg width="1.5em" height="1.5em" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.1" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2C6.48 2 2 6.58 2 12.26c0 4.48 2.87 8.28 6.84 9.63.5.09.68-.22.68-.48 0-.24-.01-.87-.01-1.7-2.78.62-3.37-1.36-3.37-1.36-.45-1.18-1.1-1.5-1.1-1.5-.9-.63.07-.62.07-.62 1 .07 1.53 1.06 1.53 1.06.89 1.57 2.34 1.12 2.91.86.09-.66.35-1.12.63-1.38-2.22-.26-4.56-1.14-4.56-5.07 0-1.12.39-2.04 1.03-2.76-.1-.26-.45-1.3.1-2.7 0 0 .84-.28 2.75 1.05A9.36 9.36 0 0 1 12 7.43c.85.004 1.7.12 2.5.34 1.9-1.33 2.74-1.05 2.74-1.05.55 1.4.2 2.44.1 2.7.64.72 1.03 1.64 1.03 2.76 0 3.94-2.34 4.8-4.57 5.06.36.32.68.94.68 1.9 0 1.37-.01 2.47-.01 2.8 0 .26.18.57.69.47C19.13 20.54 22 16.74 22 12.26 22 6.58 17.52 2 12 2z"/></svg>
              <span>GitHub</span>
            </a>
          )}
        </div>
        {description && (
          <div class="project-description-modern">
            <h2>Description</h2>
<p set:html={description.replace(/\n/g, '<br>')}></p>
          </div>
        )}
        {technologies && technologies.length > 0 && (
          <div class="project-technos-modern">
            <h3>Technologies</h3>
            <div class="tech-list-modern">
              {(technologies as string[]).map((tech: string) => (
                <span class="tech-chip-modern">{tech}</span>
              ))}
            </div>
          </div>
        )}
        {numerique && (
          <div class="nr-section-modern">
          <a href={withBase(`/numerique-responsable/${slug}`)} class="nr-link-modern">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M12 3v18M3 12h18M12 8a4 4 0 0 1 4 4M12 16a4 4 0 0 0 4-4"/>
            </svg>
            <span>Voir l'impact numérique responsable</span>
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M5 12h14M12 5l7 7-7 7"/>
            </svg>
          </a>
        </div>
        )}
        
      </div>
    </div>

    <div class="project-content">
      <Fragment set:html={project.compiledContent()} />
    </div>
    {images && images.length > 0 && (
      <section class="gallery-section">
        <h2>Galerie du projet</h2>
        <Carousel images={images} />
      </section>
    )}
  </article>

</Layout>


<style>
  .project-detail {
    max-width: 1100px;
    margin: 0 auto 3.5rem auto;
    background: linear-gradient(120deg, #151a21 60%, #1a2233 100%);
    border-radius: 1.5em;
    box-shadow: 0 8px 36px #10162455, 0 2px 12px #22304a33;
    padding: 2.5rem 2.2rem 2.5rem 2.2rem;
    display: flex;
    flex-direction: column;
    gap: 2.5rem;
    border: 2.5px solid #22304a;
    animation: fadeInProjectDetail 0.7s cubic-bezier(.22,1,.36,1);
  }
  @keyframes fadeInProjectDetail {
    from { opacity: 0; transform: translateY(40px) scale(0.97);}
    to   { opacity: 1; transform: translateY(0) scale(1);}
  }
  .project-header {
    display: flex;
    flex-direction: row;
    gap: 2.5rem;
    align-items: flex-start;
    flex-wrap: wrap;
  }
  .project-header-img {
    flex: 1 1 320px;
    max-width: 420px;
    min-width: 220px;
    display: flex;
    align-items: flex-start;
    justify-content: center;
  }
  .main-image-modern {
    width: 100%;
    max-width: 420px;
    border-radius: 1.2em;
    box-shadow: 0 2px 16px #22304a33;
    margin: 0;
    object-fit: cover;
    aspect-ratio: 16/10;
    background: #23293a;
    border: 2px solid #22304a;
    transition: box-shadow 0.22s, transform 0.22s;
  }
  .main-image-modern:hover {
    box-shadow: 0 8px 32px #5A82B2aa;
    transform: scale(1.04) rotate(-1deg);
  }
  .project-header-content {
    flex: 2 1 400px;
    min-width: 260px;
    display: flex;
    flex-direction: column;
    gap: 1.2rem;
    justify-content: flex-start;
  }
  .project-title-modern {
    font-size: 2.2rem;
    font-weight: 900;
    color: #dbeafe;
    margin: 0 0 0.7rem 0;
    letter-spacing: 1.5px;
    text-transform: uppercase;
    font-family: 'Poppins', 'Segoe UI', Arial, sans-serif;
    text-shadow: 0 2px 16px #0008;
  }
  .project-meta {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 1.5rem;
    margin-bottom: 0.7rem;
  }
  .project-date {
    color: #5A82B2;
    font-size: 1.13rem;
    font-weight: 700;
    letter-spacing: 0.7px;
    background: #23293a;
    border-radius: 0.7em;
    padding: 0.32em 1.2em;
    box-shadow: 0 1px 6px #22304a33;
    border: 1.5px solid #22304a;
  }
  .github-link-modern {
    display: inline-flex;
    align-items: center;
    gap: 0.5em;
    background: #23293a;
    color: #e3f2fd;
    padding: 0.5em 1.3em;
    border-radius: 2em;
    font-weight: 700;
    font-size: 1.08em;
    text-decoration: none;
    border: 1.5px solid #22304a;
    box-shadow: 0 1px 6px #22304a33;
    transition: background 0.18s, color 0.18s, border 0.18s, box-shadow 0.18s, transform 0.18s;
  }
  .github-link-modern:hover, .github-link-modern:focus {
    background: #5A82B2;
    color: #fff;
    border-color: #5A82B2;
    box-shadow: 0 4px 16px #5A82B2cc;
    transform: scale(1.06) translateY(-2px);
  }
  .project-description-modern h2 {
    font-size: 1.25rem;
    color: #5A82B2;
    margin-bottom: 0.5em;
    margin-top: 0;
    font-weight: 800;
    letter-spacing: 1px;
    text-transform: uppercase;
  }
  .project-description-modern p {
    color: #e3f2fd;
    font-size: 1.13rem;
    margin: 0 0 0.7em 0;
    line-height: 1.6;
  }
  .project-technos-modern h3 {
    font-size: 1.1rem;
    color: #5A82B2;
    margin-bottom: 0.3em;
    margin-top: 0;
    font-weight: 700;
    letter-spacing: 0.7px;
    text-transform: uppercase;
  }
  .tech-list-modern {
    display: flex;
    flex-wrap: wrap;
    gap: 0.7rem;
    margin-bottom: 0.5rem;
    margin-top: 0.2rem;
    width: 100%;
  }
  .tech-chip-modern {
    background: linear-gradient(120deg, #181f2b 60%, #23293a 100%);
    color: #b3c6e0;
    border: 1.5px solid #22304a;
    border-radius: 1.7rem;
    padding: 0.38em 1em;
    font-size: 0.98rem;
    font-weight: 500;
    letter-spacing: 0.18px;
    transition:
      background 0.18s,
      color 0.18s,
      border 0.18s,
      box-shadow 0.18s,
      transform 0.18s;
    box-shadow: 0 1px 6px #0002;
    cursor: pointer;
    display: inline-block;
    position: relative;
    opacity: 1;
    outline: none;
  }
  .tech-chip-modern:hover, .tech-chip-modern:focus {
    background: #5A82B2;
    color: #fff;
    border-color: #5A82B2;
    box-shadow: 0 4px 16px #5A82B2cc;
    transform: scale(1.06);
  }
  
  .nr-section-modern {
    margin-top: 2rem;
  }
  
  .nr-link-modern {
    display: inline-flex;
    align-items: center;
    gap: 0.8rem;
    background: linear-gradient(120deg, #181f2b 60%, #23293a 100%);
    color: #b3c6e0;
    padding: 0.8rem 1.5rem;
    border-radius: 2rem;
    text-decoration: none;
    font-weight: 500;
    border: 1.5px solid #22304a;
    transition: all 0.3s ease;
  }
  
  .nr-link-modern:hover {
    background: #5A82B2;
    color: white;
    border-color: #5A82B2;
    transform: translateX(5px);
    box-shadow: 0 4px 16px #5A82B2cc;
  }
  .project-content {
    color: #e3f2fd;
    font-size: 1.1rem;
    line-height: 1.7;
    margin: 1.5rem 0;
  }
  .project-gallery {
    margin: 2rem 0;
  }
  .image-carousel {
    display: flex;
    gap: 1rem;
    width: 100%;
    overflow-x: hidden;
    scroll-behavior: smooth;
    position: relative;
    margin: 2rem 0;
    padding: 0.5rem;
  }
  .image-modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.8);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 1000;
  }
  .image-modal.active {
    display: flex;
  }
  .image-modal img {
    max-width: 90%;
    max-height: 80%;
    border-radius: 1rem;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.6);
  }
  .modal-close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: rgba(255, 255, 255, 0.2);
    color: #fff;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 1rem;
    cursor: pointer;
    transition: background 0.3s ease;
  }
  .modal-close:hover {
    background: rgba(255, 255, 255, 0.4);
  }
  .modal-nav {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    gap: 1rem;
  }
  .modal-prev,
  .modal-next {
    background: rgba(90, 130, 178, 0.2);
    border: none;
    color: #fff;
    padding: 1rem;
    cursor: pointer;
    border-radius: 50%;
    transition: all 0.3s ease;
  }
  .modal-prev:hover,
  .modal-next:hover {
    background: rgba(90, 130, 178, 0.4);
    transform: scale(1.1);
  }
</style>