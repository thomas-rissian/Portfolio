---
interface Props {
  prevProject?: {
    slug: string;
    title: string;
  };
  nextProject?: {
    slug: string;
    title: string;
  };
  projectType?: 'project' | 'numerique-responsable';
}

const { prevProject, nextProject, projectType = 'project' } = Astro.props;

// Déterminer l'URL de retour en fonction du type de projet
const homeUrl = projectType === 'numerique-responsable' ? '/numerique-responsable' : '/project';
---

<nav class="project-nav">
  {prevProject && (
    <a href={`/${projectType}/${prevProject.slug}`} class="nav-prev" data-title={prevProject.title}>
      <svg width="24" height="24" viewBox="0 0 24 24" stroke="currentColor" fill="none">
        <path d="M15 18l-6-6 6-6"/>
      </svg>
      <span class="preview-title">{prevProject.title}</span>
    </a>
  )}

  <div class="nav-home-group">
    <a href={homeUrl} class="nav-home">
      <svg width="24" height="24" viewBox="0 0 24 24" stroke="currentColor" fill="none">
        <path d="M3 12h18M12 3l-9 9 9 9"/>
      </svg>
      <span class="sr-only">Retour aux projets</span>
    </a>
    {projectType === 'projet' && (
      <a href="/numerique-responsable" class="nav-switch" title="Voir les projets numériques responsables">
        <svg width="24" height="24" viewBox="0 0 24 24" stroke="currentColor" fill="none">
          <path d="M12 3v18M3 12h18M12 8a4 4 0 0 1 4 4M12 16a4 4 0 0 0 4-4"/>
        </svg>
      </a>
    )}
  </div>

  {nextProject && (
    <a href={`/${projectType}/${nextProject.slug}`} class="nav-next" data-title={nextProject.title}>
      <span class="preview-title">{nextProject.title}</span>
      <svg width="24" height="24" viewBox="0 0 24 24" stroke="currentColor" fill="none">
        <path d="M9 18l6-6-6-6"/>
      </svg>
    </a>
  )}
</nav>

<style>
  .project-nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 1100px;
    margin: 0 auto 2rem;
    padding: 0 1rem;
  }

  .nav-prev, .nav-next {
    display: flex;
    align-items: center;
    gap: 1rem;
    text-decoration: none;
    color: #e3f2fd;
    padding: 1rem 1.5rem;
    background: linear-gradient(120deg, #181f2b 60%, #23293a 100%);
    border: 1.5px solid #22304a;
    border-radius: 12px;
    transition: all 0.3s cubic-bezier(.22,1,.36,1);
    max-width: 300px;
  }

  .nav-prev:hover, .nav-next:hover {
    border-color: #5A82B2;
    transform: translateY(-3px);
    box-shadow: 0 8px 32px rgba(90, 130, 178, 0.15);
  }

  .nav-prev {
    padding-left: 1rem;
  }

  .nav-next {
    padding-right: 1rem;
    flex-direction: row-reverse;
  }

  .preview-title {
    font-size: 0.9rem;
    opacity: 0.9;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .nav-home {
    display: flex;
    align-items: center;
    justify-content: center;
    color: #5A82B2;
    padding: 0.8rem;
    border-radius: 50%;
    background: rgba(90, 130, 178, 0.1);
    border: 1.5px solid #22304a;
    transition: all 0.3s cubic-bezier(.22,1,.36,1);
  }

  .nav-home:hover {
    border-color: #5A82B2;
    transform: translateY(-3px);
    background: rgba(90, 130, 178, 0.2);
  }

  .nav-home-group {
    display: flex;
    gap: 0.8rem;
    align-items: center;
  }

  .nav-switch {
    display: flex;
    align-items: center;
    justify-content: center;
    color: #5A82B2;
    padding: 0.8rem;
    border-radius: 50%;
    background: rgba(90, 130, 178, 0.1);
    border: 1.5px solid #22304a;
    transition: all 0.3s cubic-bezier(.22,1,.36,1);
  }

  .nav-switch:hover {
    border-color: #5A82B2;
    transform: translateY(-3px);
    background: rgba(90, 130, 178, 0.2);
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
  }

  @media (max-width: 768px) {
    .project-nav {
      flex-direction: column;
      gap: 1rem;
      padding: 1rem;
    }

    .nav-prev, .nav-next {
      width: 100%;
      max-width: none;
    }

    .preview-title {
      font-size: 0.85rem;
    }
  }
</style>
